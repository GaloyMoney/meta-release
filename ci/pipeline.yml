#@ load("@ytt:data", "data")

#@ src_repos = [ "galoy-app", "admin-panel", "galoy-pay", "web-wallet", "stablesats-rs", "bria", "fulcrum" ]
#@ src_to_chart_override_config = { "galoy-app": "galoy", "stablesats-rs": "stablesats" }
#@ chart_to_repo_override_config = { "stablesats": "stablesats-rs" }

#@ src_charts = []
#@ for src in src_repos:
#@   if src in src_to_chart_override_config.keys():
#@     src_charts.append(src_to_chart_override_config[src])
#@   else:
#@     src_charts.append(src)
#@   end
#@ end

#@ depl_groups = {
#@   "galoy": ["galoy"],
#@   "infra": ["infra"],
#@   "bitcoin": ["bitcoind", "lnd", "rtl", "specter", "bria", "fulcrum"],
#@   "monitoring": ["monitoring"],
#@   "addons": ["admin-panel", "galoy-pay", "web-wallet"],
#@   "stablesats": ["stablesats"],
#@   "galoy-deps": ["galoy-deps"]
#@ }

#@ charts_vendir_refs = {
#@   "galoy": "galoy-in/modules/galoy/vendor/galoy/git-ref/ref",
#@   "bitcoind": "bitcoind-in/modules/services/bitcoin/vendor/bitcoind/git-ref/ref",
#@   "lnd": "lnd-in/modules/services/bitcoin/vendor/lnd1/git-ref/ref",
#@   "rtl": "rtl-in/modules/services/bitcoin/vendor/rtl/git-ref/ref",
#@   "specter": "specter-in/modules/services/bitcoin/vendor/specter/git-ref/ref",
#@   "bria": "bria-in/modules/services/bitcoin/vendor/bria/git-ref/ref",
#@   "fulcrum": "fulcrum-in/modules/services/bitcoin/vendor/fulcrum/git-ref/ref",
#@   "monitoring": "monitoring-in/modules/services/monitoring/vendor/monitoring/git-ref/ref",
#@   "admin-panel": "admin-panel-in/modules/services/addons/vendor/admin-panel/git-ref/ref",
#@   "galoy-pay": "galoy-pay-in/modules/services/addons/vendor/galoy-pay/git-ref/ref",
#@   "web-wallet": "web-wallet-in/modules/services/addons/vendor/web-wallet/git-ref/ref",
#@   "stablesats": "stablesats-in/modules/services/stablesats/vendor/stablesats/git-ref/ref",
#@   "galoy-deps": "galoy-deps-in/modules/services/galoy-deps/vendor/galoy-deps/git-ref/ref"
#@ }

#@ override_config = {
#@   "bitcoind": "bitcoin",
#@   "lnd": "bitcoin",
#@   "rtl": "bitcoin",
#@   "specter": "bitcoin",
#@   "bria": "bitcoin",
#@   "fulcrum": "bitcoin",
#@   "admin-panel": "addons",
#@   "galoy-pay": "addons",
#@   "web-wallet": "addons",
#@ }

#@ infra_vendir_ref = "infra-in/modules/infra/vendor/git-ref/ref"

#@ charts = charts_vendir_refs.keys()

#@ def pipeline_image():
#@   return data.values.docker_registry + "/release-pipeline"
#@ end

#@ def dcind_pipeline_image():
#@   return data.values.docker_registry + "/dcind-release-pipeline"
#@ end

#@ def task_image_config():
type: registry-image
source:
  username: #@ data.values.docker_registry_user
  password: #@ data.values.docker_registry_password
  repository: #@ pipeline_image()
#@ end

#@ def dcind_task_image_config():
type: registry-image
source:
  username: #@ data.values.docker_registry_user
  password: #@ data.values.docker_registry_password
  repository: #@ dcind_pipeline_image()
#@ end

#@ def cepler_config(deployment):
#@   return "cepler/" + deployment + ".yml"
#@ end

#@ def cepler_resource_name(deployment):
#@   return deployment + "-in"
#@ end

#@ def cepler_in(deployment):
name: #@ cepler_resource_name(deployment)
type: cepler-in
source:
  uri: #@ data.values.deployments_git_uri
  branch: #@ data.values.deployments_git_branch
  private_key: #@ data.values.github_private_key
  environment: #@ deployment + "-release"
  config: #@ cepler_config(override_config[deployment] if deployment in override_config.keys() else deployment)
#@ end

#@ def version_resource_name(deployment):
#@   return deployment + "-version"
#@ end

#@ def version_resource(deployment):
name: #@ version_resource_name(deployment)
type: semver
source:
  initial_version: 0.0.0
  driver: git
  file: #@ deployment + "-version"
  uri: #@ data.values.git_uri
  branch: #@ data.values.git_version_branch
  private_key: #@ data.values.github_private_key
#@ end

#@ def infra_version_resource():
name: #@ version_resource_name("infra")
type: semver
source:
  initial_version: 0.0.0
  driver: git
  file: version
  uri: #@ data.values.infra_git_uri
  branch: #@ data.values.infra_git_version_branch
  private_key: #@ data.values.github_private_key
#@ end

#@ def gh_release_resource_name(deployment):
#@   return "gh-release-" + deployment
#@ end

#@ def gh_release_resource(deployment, repository):
name: #@ gh_release_resource_name(deployment)
type: github-release
source:
  owner: #@ data.values.gh_org
  repository: #@ repository
  access_token: #@ data.values.github_api_token
  check_every: never
  #@ if repository == data.values.charts_gh_repo:
  tag_filter: #@ deployment + "-v.*"
  #@ end
#@ end

#@ def gh_https_url(org, repo):
#@   return "https://github.com/" + org + "/" + repo
#@ end

#@ def stable_branch_name(deployment):
#@   return deployment + "-" + data.values.stable_git_branch
#@ end

#@ def out_resource_name(deployment):
#@   return deployment + "-repo-out"
#@ end

#@ def out_resource(deployment, uri):
name: #@ out_resource_name(deployment)
type: git
source:
  uri: #@ uri
  branch: #@ stable_branch_name(deployment)
  private_key: #@ data.values.github_private_key
#@ end

#@ def chart_src_repo_name(chart):
#@   return chart + "-repo"
#@ end

#@ def chart_src_git_repo_uri(chart):
#@   if chart in chart_to_repo_override_config.keys():
#@     return data.values.src_repo_git_uri_prefix + "/" + chart_to_repo_override_config[chart] + ".git"
#@   else:
#@     return data.values.src_repo_git_uri_prefix + "/" + chart + ".git"
#@   end
#@ end

#@ def chart_src_repo(chart):
name: #@ chart_src_repo_name(chart)
type: git
source:
  uri: #@ chart_src_git_repo_uri(chart)
  branch: #@ data.values.git_branch
  private_key: #@ data.values.github_private_key
#@ end

groups:
#@ for group in depl_groups.keys():
- name: #@ group
  jobs:
  #@ for job in depl_groups[group]:
  - #@ job + "-release"
  #@ end
#@ end
- name: update-lsc
  jobs:
  - update-lsc
- name: all
  jobs:
#@ for depl in charts:
  - #@ depl + "-release"
#@ end
  - infra-release
  - update-lsc
  - build-release-pipeline-image
  - build-dcind-pipeline-image
- name: image
  jobs:
  - build-release-pipeline-image
  - build-dcind-pipeline-image

jobs:
#@ for chart in charts:
- name: #@ chart + "-release"
  serial_groups: [ chart-release ]
  plan:
  - in_parallel:
    - get: #@ cepler_resource_name(chart)
      trigger: true
    - get: #@ version_resource_name(chart)
    #@ if chart in src_charts:
    - get: #@ chart_src_repo_name(chart)
      params:
        fetch_tags: true
    #@ end
    - get: charts-repo
    - get: charts-gh-pages-repo
    - get: pipeline-tasks

#! ------------ CHANGELOG ----------------

  - task: create-changelog
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: #@ version_resource_name(chart)
        path: version
      - name: charts-repo
        path: repo
      - name: #@ cepler_resource_name(chart)
      #@ if chart in src_charts:
      - name: #@ chart_src_repo_name(chart)
        path: src-repo
      #@ end
      outputs:
      - name: changelog
      - name: release-commitid
      params:
        INCLUDE_PATH: #@ "charts/" + chart + "/*"
        new_git_ref_path: #@ charts_vendir_refs[chart]
        depl_name: #@ chart
        #@ if chart in src_charts:
        gen_src: TRUE
        #@ end
      run:
        path: pipeline-tasks/ci/tasks/changelog.sh

#! ------------ RELEASE ----------------

  - task: checkout-release-branch
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: release-commitid
      - name: charts-repo
        path: repo
      outputs:
      - name: charts-repo
        path: repo
      run:
        path: pipeline-tasks/ci/tasks/checkout-release-branch.sh

  - task: prep-release
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: changelog
      - name: release-commitid
      - name: #@ version_resource_name(chart)
        path: version
      - name: charts-repo
        path: repo
      outputs:
      - name: gh-release
      - name: charts-repo
        path: repo
      - name: #@ version_resource_name(chart)
        path: version
      params:
        CHART: #@ chart
      run:
        path: pipeline-tasks/ci/tasks/prep-release-chart.sh

  - put: #@ out_resource_name(chart)
    params:
      repository: charts-repo
      branch: #@ stable_branch_name(chart)
      tag: gh-release/tag
      force: true

  - put: #@ gh_release_resource_name(chart)
    params:
      name: gh-release/name
      tag: gh-release/tag
      body: gh-release/notes.md
      globs:
      - gh-release/files/*.tgz

#! ------------ UPDATE HELM INDEX ------------

  - task: update-helm-index
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: changelog
      - name: gh-release
      - name: charts-gh-pages-repo
        path: repo
      outputs:
      - name: charts-gh-pages-repo
        path: repo
      params:
        CHART: #@ chart
        CR_OWNER: #@ data.values.gh_org
        CR_GIT_REPO: #@ data.values.charts_gh_repo
        CHART_GIT_REPO_HTTPS_URL: #@ gh_https_url(data.values.gh_org, data.values.charts_gh_repo)
      run:
        path: pipeline-tasks/ci/tasks/update-helm-index.sh

  - put: charts-gh-pages-repo
    params:
      repository: charts-gh-pages-repo
      branch: #@ data.values.charts_gh_pages_branch
      rebase: true

#! ------------ BUMP AND MERGE BACK ------------

  - task: bump-version
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: changelog
      - name: #@ version_resource_name(chart)
        path: version
      - name: charts-repo
        path: repo
      outputs:
      - name: #@ version_resource_name(chart)
        path: version
      - name: charts-repo
        path: repo
      params:
        CHART: #@ chart
      run:
        path: pipeline-tasks/ci/tasks/bump-version.sh

  - task: merge-back
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: charts-repo
        path: repo
      - name: #@ version_resource_name(chart)
        path: version
      outputs:
      - name: charts-repo
        path: repo
      params:
        CHART: #@ chart
      run:
        path: pipeline-tasks/ci/tasks/merge-back.sh

  - put: charts-repo
    params:
      repository: charts-repo
      branch: #@ data.values.charts_git_branch
      rebase: true

  - put: #@ version_resource_name(chart)
    params:
      file: #@ version_resource_name(chart) + "/version"

#@ end

- name: infra-release
  serial_groups: [ chart-release ]
  plan:
  - in_parallel:
    - get: #@ cepler_resource_name("infra")
      trigger: true
    - get: #@ version_resource_name("infra")
    - get: infra-repo
    - get: pipeline-tasks

#! ------------ CHANGELOG ----------------

  - task: create-changelog
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: #@ version_resource_name("infra")
        path: version
      - name: infra-repo
        path: repo
      - name: #@ cepler_resource_name("infra")
      outputs:
      - name: changelog
      - name: release-commitid
      params:
        new_git_ref_path: #@ infra_vendir_ref
        depl_name: infra
      run:
        path: pipeline-tasks/ci/tasks/changelog.sh

#! ------------ RELEASE ----------------

  - task: prep-release
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: changelog
      - name: release-commitid
      - name: #@ version_resource_name("infra")
        path: version
      - name: infra-repo
        path: repo-stable
      outputs:
      - name: gh-release
      - name: infra-repo
        path: repo-stable
      - name: #@ version_resource_name("infra")
        path: version
      run:
        path: pipeline-tasks/ci/tasks/prep-release-infra.sh

  - put: #@ out_resource_name("infra")
    params:
      repository: infra-repo
      branch: #@ stable_branch_name("infra")
      tag: gh-release/tag

  - put: #@ gh_release_resource_name("infra")
    params:
      name: gh-release/name
      tag: gh-release/tag
      body: gh-release/notes.md

  - put: #@ version_resource_name("infra")
    params:
      file: #@ version_resource_name("infra") + "/version"

- name: update-lsc
  serial: true
  plan:
  - in_parallel:
    #@ for chart in charts:
    - get: #@ gh_release_resource_name(chart)
      trigger: true
    #@ end
    - get: #@ gh_release_resource_name("infra")
      trigger: true
    - get: #@ gh_release_resource_name("galoy-mobile")
      trigger: true
    - get: meta-release
    - get: pipeline-tasks

  - task: update-release-yml-and-readme
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      #@ for chart in charts:
      - name: #@ gh_release_resource_name(chart)
        path: #@ chart
      #@ end
      - name: #@ gh_release_resource_name("infra")
        path: infra
      - name: #@ gh_release_resource_name("galoy-mobile")
        path: galoy-mobile
      - name: pipeline-tasks
      - name: meta-release
      outputs:
      - name: meta-release
      run:
        path: pipeline-tasks/ci/tasks/update-release-yml-and-readme.sh

  - put: meta-release
    params:
      repository: meta-release
      branch: #@ data.values.git_branch
      rebase: true

- name: build-release-pipeline-image
  serial: true
  plan:
  - get: release-pipeline-image-def
    trigger: true
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: release-pipeline-image-def
      outputs:
      - name: image
      params:
        CONTEXT: release-pipeline-image-def/ci/image/release
      run:
        path: build
  - put: release-pipeline-image
    params:
      image: image/image.tar

- name: build-dcind-pipeline-image
  serial: true
  plan:
  - get: dcind-pipeline-image-def
    trigger: true
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: dcind-pipeline-image-def
      outputs:
      - name: image
      params:
        CONTEXT: dcind-pipeline-image-def/ci/image/dcind
      run:
        path: build
  - put: dcind-pipeline-image
    params:
      image: image/image.tar

resources:
- name: meta-release
  type: git
  source:
    ignore_paths:
    - "ci/*"
    - config.toml
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key

- name: pipeline-tasks
  type: git
  source:
    paths:
    - "ci/*"
    - config.toml
    uri: #@ data.values.git_uri
    branch: #@ data.values.pipeline_git_branch
    private_key: #@ data.values.github_private_key

- name: charts-repo
  type: git
  source:
    uri: #@ data.values.charts_git_uri
    branch: #@ data.values.charts_git_branch
    private_key: #@ data.values.github_private_key

- name: charts-gh-pages-repo
  type: git
  source:
    uri: #@ data.values.charts_git_uri
    branch: #@ data.values.charts_gh_pages_branch
    private_key: #@ data.values.github_private_key

#@ for chart in charts:
- #@ version_resource(chart)
- #@ cepler_in(chart)
- #@ gh_release_resource(chart, data.values.charts_gh_repo)
- #@ out_resource(chart, data.values.charts_git_uri)
#@ end

- name: infra-repo
  type: git
  source:
    uri: #@ data.values.infra_git_uri
    branch: #@ data.values.infra_git_branch
    private_key: #@ data.values.github_private_key

- #@ infra_version_resource()
- #@ cepler_in("infra")
- #@ gh_release_resource("infra", data.values.infra_gh_repo)
- #@ out_resource("infra", data.values.infra_git_uri)

- #@ gh_release_resource("galoy-mobile", data.values.mobile_gh_repo)

#@ for src in src_charts:
- #@ chart_src_repo(src)
#@ end

- name: release-pipeline-image
  type: registry-image
  source:
    tag: latest
    username: #@ data.values.docker_registry_user
    password: #@ data.values.docker_registry_password
    repository: #@ pipeline_image()

- name: dcind-pipeline-image
  type: registry-image
  source:
    tag: latest
    username: #@ data.values.docker_registry_user
    password: #@ data.values.docker_registry_password
    repository: #@ dcind_pipeline_image()

- name: release-pipeline-image-def
  type: git
  source:
    paths: [ci/image/release/Dockerfile]
    uri: #@ data.values.git_uri
    branch: #@ data.values.pipeline_git_branch
    private_key: #@ data.values.github_private_key

- name: dcind-pipeline-image-def
  type: git
  source:
    paths: [ci/image/dcind/Dockerfile]
    uri: #@ data.values.git_uri
    branch: #@ data.values.pipeline_git_branch
    private_key: #@ data.values.github_private_key

resource_types:
- name: cepler-in
  type: registry-image
  source:
    repository: cepler/cepler-concourse-resource
    tag: latest
