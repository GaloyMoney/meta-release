#@ load("@ytt:data", "data")

#@ infra = ["infra"]

#@ def pipeline_image():
#@   return data.values.docker_registry + "/release-pipeline"
#@ end

#@ def task_image_config():
type: registry-image
source:
  username: #@ data.values.docker_registry_user
  password: #@ data.values.docker_registry_password
  repository: #@ pipeline_image()
#@ end

#@ def cepler_config(deployment):
#@   return "cepler/" + deployment + ".yml"
#@ end

#@ def cepler_resource_name(deployment):
#@   return deployment + "-in"
#@ end

#@ def cepler_in(deployment):
name: #@ cepler_resource_name(deployment)
type: cepler-in
source:
  uri: #@ data.values.deployments_git_uri
  branch: #@ data.values.deployments_git_branch
  private_key: #@ data.values.github_private_key
  environment: #@ data.values.release_environment
  config: #@ cepler_config(deployment)
#@ end

groups:
- name: all
  jobs:
#@ for depl in infra:
  - #@ depl + "-release"
#@ end
- name: image
  jobs:
  - build-release-pipeline-image

jobs:
- name: infra-release
  plan:
  - in_parallel:
    - { get: infra-in, trigger: true }
    - { get: infra-version }
    - { get: meta-release }
    - { get: infra-repo }

#! ------------ CHANGELOG ----------------
  - task: create-changelog
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: meta-release
      - name: infra-repo
        path: repo
      - name: infra-in
      outputs:
      - name: changelog
      - name: release-commitid
      params:
        new_git_ref_path: infra-in/modules/infra/vendor/git-ref/ref
      run:
        path: meta-release/ci/tasks/changelog.sh

#! ------------ RELEASE ----------------
  - task: prep-release
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: meta-release
      - name: changelog
      - name: release-commitid
      - name: infra-version
        path: version
      - name: infra-repo
        path: repo-stable
      outputs:
      - name: gh-release
      - name: infra-repo
        path: repo-stable
      - name: infra-version
        path: version
      run:
        path: meta-release/ci/tasks/prep-release-infra.sh
  - put: infra-repo
    params:
      repository: infra-repo
      branch: #@ data.values.stable_git_branch
      tag: infra-version/version
      tag_prefix: v
  - put: github-release-infra
    params:
      name: gh-release/name
      tag: gh-release/tag
      body: gh-release/notes.md
  - put: infra-version
    params: { file: infra-version/version }

- name: build-release-pipeline-image
  serial: true
  plan:
  - get: release-pipeline-image-def
    trigger: true
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: release-pipeline-image-def
      outputs:
      - name: image
      params:
        CONTEXT: release-pipeline-image-def/ci/image
      run:
        path: build
  - put: release-pipeline-image
    params:
      image: image/image.tar

resources:
- name: infra-repo
  type: git
  source:
    uri: #@ data.values.infra_git_uri
    branch: #@ data.values.infra_git_branch
    private_key: #@ data.values.github_private_key

- name: github-release-infra
  type: github-release
  source:
    owner: #@ data.values.gh_org
    repository: #@ data.values.infra_gh_repo
    access_token: #@ data.values.github_api_token

- name: infra-version
  type: semver
  source:
    initial_version: 0.1.0
    driver: git
    file: infra-version
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_version_branch
    private_key: #@ data.values.github_private_key

- name: meta-release
  type: git
  source:
    paths: 
    - "template.md"
    - "release.yml"
    - "ci/tasks/*"
    - "config.toml"
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key
  
- name: release-pipeline-image
  type: registry-image
  source:
    tag: latest
    username: #@ data.values.docker_registry_user
    password: #@ data.values.docker_registry_password
    repository: #@ pipeline_image()

- name: release-pipeline-image-def
  type: git
  source:
    paths: [ci/image/Dockerfile]
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key

#@ for depl in infra:
- #@ cepler_in(depl)
#@ end

resource_types:
- name: cepler-in
  type: registry-image
  source:
    repository: cepler/cepler-concourse-resource
    tag: latest
